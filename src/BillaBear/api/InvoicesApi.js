/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.56
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import Error from '../model/Error';
import InlineResponse20012 from '../model/InlineResponse20012';
import InlineResponse2004 from '../model/InlineResponse2004';

/**
* Invoices service.
* @module BillaBear/api/InvoicesApi
* @version 1.0.0
*/
export default class InvoicesApi {

    /**
    * Constructs a new InvoicesApi. 
    * @alias module:BillaBear/api/InvoicesApi
    * @class
    * @param {module:BillaBear/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:BillaBear/ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the chargeInvoice operation.
     * @callback moduleBillaBear/api/InvoicesApi~chargeInvoiceCallback
     * @param {String} error Error message, if any.
     * @param {module:BillaBear/model/InlineResponse20012{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Charge Invoice
     * Attempts to charge a card that is on file for the invoice amount
     * @param {String} invoiceId The id of the invoice
     * @param {module:BillaBear/api/InvoicesApi~chargeInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    chargeInvoice(invoiceId, callback) {
      
      let postBody = null;
      // verify the required parameter 'invoiceId' is set
      if (invoiceId === undefined || invoiceId === null) {
        throw new Error("Missing the required parameter 'invoiceId' when calling chargeInvoice");
      }

      let pathParams = {
        'invoiceId': invoiceId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20012;

      return this.apiClient.callApi(
        '/invoice/{invoiceId}/charge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the downloadInvoice operation.
     * @callback moduleBillaBear/api/InvoicesApi~downloadInvoiceCallback
     * @param {String} error Error message, if any.
     * @param {'Blob'{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download Invoice
     * Returns the pdf blob for the invoice
     * @param {String} invoiceId The id of the invoice
     * @param {module:BillaBear/api/InvoicesApi~downloadInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    downloadInvoice(invoiceId, callback) {
      
      let postBody = null;
      // verify the required parameter 'invoiceId' is set
      if (invoiceId === undefined || invoiceId === null) {
        throw new Error("Missing the required parameter 'invoiceId' when calling downloadInvoice");
      }

      let pathParams = {
        'invoiceId': invoiceId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/pdf'];
      let returnType = 'Blob';

      return this.apiClient.callApi(
        '/invoice/{invoiceId}/download', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getInvoicesForCustomer operation.
     * @callback moduleBillaBear/api/InvoicesApi~getInvoicesForCustomerCallback
     * @param {String} error Error message, if any.
     * @param {module:BillaBear/model/InlineResponse2004{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Customer Invoices
     * List Customer Invoices
     * @param {String} customerId The id of the customer to retrieve
     * @param {module:BillaBear/api/InvoicesApi~getInvoicesForCustomerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getInvoicesForCustomer(customerId, callback) {
      
      let postBody = null;
      // verify the required parameter 'customerId' is set
      if (customerId === undefined || customerId === null) {
        throw new Error("Missing the required parameter 'customerId' when calling getInvoicesForCustomer");
      }

      let pathParams = {
        'customerId': customerId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2004;

      return this.apiClient.callApi(
        '/customer/{customerId}/invoices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}