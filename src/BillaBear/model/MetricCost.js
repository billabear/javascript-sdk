/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.56
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The MetricCost model module.
 * @module BillaBear/model/MetricCost
 * @version 1.0.0
 */
export default class MetricCost {
  /**
   * Constructs a new <code>MetricCost</code>.
   * @alias module:BillaBear/model/MetricCost
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>MetricCost</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:BillaBear/model/MetricCost} obj Optional instance to populate.
   * @return {module:BillaBear/model/MetricCost} The populated <code>MetricCost</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MetricCost();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('currency'))
        obj.currency = ApiClient.convertToType(data['currency'], 'String');
      if (data.hasOwnProperty('usage'))
        obj.usage = ApiClient.convertToType(data['usage'], 'Number');
    }
    return obj;
  }
}

/**
 * The name of the metric that the cost is for
 * @member {String} name
 */
MetricCost.prototype.name = undefined;

/**
 * @member {Number} amount
 */
MetricCost.prototype.amount = undefined;

/**
 * @member {String} currency
 */
MetricCost.prototype.currency = undefined;

/**
 * @member {Number} usage
 */
MetricCost.prototype.usage = undefined;

