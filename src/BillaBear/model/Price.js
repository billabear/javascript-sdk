/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.56
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Metric from './Metric';

/**
 * The Price model module.
 * @module BillaBear/model/Price
 * @version 1.0.0
 */
export default class Price {
  /**
   * Constructs a new <code>Price</code>.
   * @alias module:BillaBear/model/Price
   * @class
   * @param amount {Number} 
   * @param currency {String} Three-letter ISO currency code. Must be upper-case
   * @param recurring {Boolean} 
   */
  constructor(amount, currency, recurring) {
    this.amount = amount;
    this.currency = currency;
    this.recurring = recurring;
  }

  /**
   * Constructs a <code>Price</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:BillaBear/model/Price} obj Optional instance to populate.
   * @return {module:BillaBear/model/Price} The populated <code>Price</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Price();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('currency'))
        obj.currency = ApiClient.convertToType(data['currency'], 'String');
      if (data.hasOwnProperty('external_reference'))
        obj.externalReference = ApiClient.convertToType(data['external_reference'], 'String');
      if (data.hasOwnProperty('recurring'))
        obj.recurring = ApiClient.convertToType(data['recurring'], 'Boolean');
      if (data.hasOwnProperty('schedule'))
        obj.schedule = ApiClient.convertToType(data['schedule'], 'String');
      if (data.hasOwnProperty('including_tax'))
        obj.includingTax = ApiClient.convertToType(data['including_tax'], 'Boolean');
      if (data.hasOwnProperty('public'))
        obj._public = ApiClient.convertToType(data['public'], 'Boolean');
      if (data.hasOwnProperty('metric'))
        obj.metric = Metric.constructFromObject(data['metric']);
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
Price.prototype.id = undefined;

/**
 * @member {Number} amount
 */
Price.prototype.amount = undefined;

/**
 * Three-letter ISO currency code. Must be upper-case
 * @member {String} currency
 */
Price.prototype.currency = undefined;

/**
 * @member {String} externalReference
 */
Price.prototype.externalReference = undefined;

/**
 * @member {Boolean} recurring
 */
Price.prototype.recurring = undefined;

/**
 * Allowed values for the <code>schedule</code> property.
 * @enum {String}
 * @readonly
 */
Price.ScheduleEnum = {
  /**
   * value: "week"
   * @const
   */
  week: "week",

  /**
   * value: "month"
   * @const
   */
  month: "month",

  /**
   * value: "year"
   * @const
   */
  year: "year",

  /**
   * value: "one-off"
   * @const
   */
  oneOff: "one-off"
};
/**
 * Required if recurring is true
 * @member {module:BillaBear/model/Price.ScheduleEnum} schedule
 */
Price.prototype.schedule = undefined;

/**
 * If the price is including tax. If false tax will be added on top of the price.
 * @member {Boolean} includingTax
 */
Price.prototype.includingTax = undefined;

/**
 * @member {Boolean} _public
 */
Price.prototype._public = undefined;

/**
 * @member {module:BillaBear/model/Metric} metric
 */
Price.prototype.metric = undefined;

