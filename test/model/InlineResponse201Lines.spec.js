/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.56
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/BillaBear/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/BillaBear/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillaBear);
  }
}(this, function(expect, BillaBear) {
  'use strict';

  var instance;

  describe('BillaBear', function() {
    describe('InlineResponse201Lines', function() {
      beforeEach(function() {
        instance = new BillaBear.InlineResponse201Lines();
      });

      it('should create an instance of InlineResponse201Lines', function() {
        // TODO: update the code to test InlineResponse201Lines
        expect(instance).to.be.a(BillaBear.InlineResponse201Lines);
      });

      it('should have the property subscriptionPlan (base name: "subscription_plan")', function() {
        // TODO: update the code to test the property subscriptionPlan
        expect(instance).to.have.property('subscriptionPlan');
        // expect(instance.subscriptionPlan).to.be(expectedValueLiteral);
      });

      it('should have the property price (base name: "price")', function() {
        // TODO: update the code to test the property price
        expect(instance).to.have.property('price');
        // expect(instance.price).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property currency (base name: "currency")', function() {
        // TODO: update the code to test the property currency
        expect(instance).to.have.property('currency');
        // expect(instance.currency).to.be(expectedValueLiteral);
      });

      it('should have the property seatNumber (base name: "seat_number")', function() {
        // TODO: update the code to test the property seatNumber
        expect(instance).to.have.property('seatNumber');
        // expect(instance.seatNumber).to.be(expectedValueLiteral);
      });

      it('should have the property subTotal (base name: "sub_total")', function() {
        // TODO: update the code to test the property subTotal
        expect(instance).to.have.property('subTotal');
        // expect(instance.subTotal).to.be(expectedValueLiteral);
      });

      it('should have the property taxTotal (base name: "tax_total")', function() {
        // TODO: update the code to test the property taxTotal
        expect(instance).to.have.property('taxTotal');
        // expect(instance.taxTotal).to.be(expectedValueLiteral);
      });

      it('should have the property taxRate (base name: "tax_rate")', function() {
        // TODO: update the code to test the property taxRate
        expect(instance).to.have.property('taxRate');
        // expect(instance.taxRate).to.be(expectedValueLiteral);
      });

    });
  });

}));
