/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.56
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/BillaBear/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/BillaBear/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillaBear);
  }
}(this, function(expect, BillaBear) {
  'use strict';

  var instance;

  describe('BillaBear', function() {
    describe('SubscriptionPlan', function() {
      beforeEach(function() {
        instance = new BillaBear.SubscriptionPlan();
      });

      it('should create an instance of SubscriptionPlan', function() {
        // TODO: update the code to test SubscriptionPlan
        expect(instance).to.be.a(BillaBear.SubscriptionPlan);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property codeName (base name: "code_name")', function() {
        // TODO: update the code to test the property codeName
        expect(instance).to.have.property('codeName');
        // expect(instance.codeName).to.be(expectedValueLiteral);
      });

      it('should have the property userCount (base name: "user_count")', function() {
        // TODO: update the code to test the property userCount
        expect(instance).to.have.property('userCount');
        // expect(instance.userCount).to.be(expectedValueLiteral);
      });

      it('should have the property perSeat (base name: "per_seat")', function() {
        // TODO: update the code to test the property perSeat
        expect(instance).to.have.property('perSeat');
        // expect(instance.perSeat).to.be(expectedValueLiteral);
      });

      it('should have the property hasTrial (base name: "has_trial")', function() {
        // TODO: update the code to test the property hasTrial
        expect(instance).to.have.property('hasTrial');
        // expect(instance.hasTrial).to.be(expectedValueLiteral);
      });

      it('should have the property isTrialStandalone (base name: "is_trial_standalone")', function() {
        // TODO: update the code to test the property isTrialStandalone
        expect(instance).to.have.property('isTrialStandalone');
        // expect(instance.isTrialStandalone).to.be(expectedValueLiteral);
      });

      it('should have the property free (base name: "free")', function() {
        // TODO: update the code to test the property free
        expect(instance).to.have.property('free');
        // expect(instance.free).to.be(expectedValueLiteral);
      });

      it('should have the property _public (base name: "public")', function() {
        // TODO: update the code to test the property _public
        expect(instance).to.have.property('_public');
        // expect(instance._public).to.be(expectedValueLiteral);
      });

      it('should have the property limits (base name: "limits")', function() {
        // TODO: update the code to test the property limits
        expect(instance).to.have.property('limits');
        // expect(instance.limits).to.be(expectedValueLiteral);
      });

      it('should have the property features (base name: "features")', function() {
        // TODO: update the code to test the property features
        expect(instance).to.have.property('features');
        // expect(instance.features).to.be(expectedValueLiteral);
      });

      it('should have the property product (base name: "product")', function() {
        // TODO: update the code to test the property product
        expect(instance).to.have.property('product');
        // expect(instance.product).to.be(expectedValueLiteral);
      });

      it('should have the property prices (base name: "prices")', function() {
        // TODO: update the code to test the property prices
        expect(instance).to.have.property('prices');
        // expect(instance.prices).to.be(expectedValueLiteral);
      });

      it('should have the property trialLengthDays (base name: "trial_length_days")', function() {
        // TODO: update the code to test the property trialLengthDays
        expect(instance).to.have.property('trialLengthDays');
        // expect(instance.trialLengthDays).to.be(expectedValueLiteral);
      });

    });
  });

}));
